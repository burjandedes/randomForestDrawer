% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processTree.R
\name{processTree}
\alias{processTree}
\title{Converts a tree to a graph}
\usage{
processTree(treeGraphList, rawTreeDataFrame, defaultColor = "blue",
  defaultShape = "square", classes = NULL, colors = NULL, shapes = NULL)
}
\arguments{
\item{treeGraphList}{A list which contains the graphs.}

\item{rawTreeDataFrame}{A tree, which created with the randomForest::getTree function.}

\item{defaultColor}{The default color of the nodes.}

\item{defaultShape}{The deafult shape of the nodes.}

\item{classes}{The classes of the random forest target variables (if any).}

\item{colors}{The colors of the classes (if any).}

\item{shapes}{The shapes of the classes (if any).}
}
\value{
A list which contains the new and a previous graphs.
}
\description{
Processes and converts a single tree of a random forest to an igraph graph.
}
\details{
With this function you can convert a tree of a random forest model to an
igraph graph. At first we process the raw tree data and make a graph data
from it. After that we add properties to the graph. And finally we append
the new graph to a list which contains igraph graphs.
}
\examples{
\dontrun{
# Model must be a valid rf model with keep.forest=TRUE
treeGraphList <- list()
treeGraphList <- processTree(
                   treeGraphList
                   randomForest::getTree(model, k=1, labelVar=TRUE),
                 )
print(treeGraphList)
}
}
